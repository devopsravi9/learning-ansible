- name: play level variables
  hosts: localhost
  vars:
    URL: the.example.com
  tasks:
    - name: print URL
      ansible.builtin.debug:
        msg: url is {{ URL }}

- name: task level variables
  hosts: localhost
  tasks:
  - name: print URL
    ansible.builtin.debug:
      msg: url is {{ URL }}
    vars :
      URL : task.example.com

- name: inventory level variables
  hosts: localhost
  tasks:
    - name: print URL
      ansible.builtin.debug:
        #msg: url is {{ URL }}

- name : fact & magic level variables
  hosts : localhost
  tasks :
  - name : print hostname
    ansible.builtin.debug :
      msg : hostname is {{ ansible_hostname }} menory {{ansible_memory_mb.real.free}}
      # acessing fact variables from maps
  - name : print fqdn
    ansible.builtin.debug :
      msg : "{{ ansible_fqdn}}"
      # if any value starts with variable we should use double quote

# giving the output of command to variaable and then acessing it ( like command substitution)
- name: register variables
  hosts: localhost
  tasks:
  - name : Execute the command in remote shell; stdout goes to the specified file on the remote
    # search for shell command in google and get it from there
    ansible.builtin.shell : uptime
    # any module output can store with a variable using "register" key.
    register: output

  - name: print output
    ansible.builtin.debug:
      msg: "{{output}}"

  - name: store variable in standard name
    ansible.builtin.set_fact:
      UPTIME: "{{output}}"

  - name: print output of shell command
    ansible.builtin.debug:
      msg: "{{UPTIME}}"
    # the output is a map let acess only one particular key from that map"
    #  msg : "{{output.stdout}}"

#  to bypass password during operation we can give it on command line
# -e ansible_user=centos
# -e ansible_password=DevOps321
# you can get above from ansible special variables section